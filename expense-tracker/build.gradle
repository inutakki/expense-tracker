plugins {
    id "org.sonarqube" version "1.1"
}

apply plugin: "com.jfrog.artifactory"
buildscript {
    repositories {
        jcenter()

        maven {
            url 'http://localhost:8081/artifactory/plugins-release'
            credentials {
                username = "admin"
                password = "password"
            }
        }
    }
dependencies{
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.3"
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.vinsol.expensetracker"
        minSdkVersion 8
        targetSdkVersion 8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

// nexus repository plugin
apply plugin: 'com.bmuschko.nexus'

nexus {
    sign = false
    repositoryUrl = 'http://localhost:8081/nexus/content/repositories/releases/'
    snapshotRepositoryUrl = 'http://localhost:8081/nexus/content/repositories/internal-snapshots/'
}


dependencies {
    compile 'com.google.code.gson:gson:2.2.1'
    compile files('libs/AndroidPdfLib.jar')
    compile files('libs/FlurryAgent.jar')
    compile files('libs/httpmime-4.2.jar')

    // integration testing
    //agent 'org.aspectj:aspectjweaver:${aspectjVersion}'
    //testCompile 'ru.yandex.qatools.allure:allure-testng-adaptor:${allureVersion}'
    testCompile 'org.testng:testng:6.8'


    // Unit testing dependencies
    testCompile 'junit:junit:4.12'
    // Set this dependency if you want to use Mockito
    testCompile 'org.mockito:mockito-core:1.10.19'
    // Set this dependency if you want to use Hamcrest matching
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    // Set this dependency if you want to use Roboelectric
    // testCompile "org.robolectric:robolectric:3.0-SNAPSHOT"
}

//Test Logging
tasks.withType(Test) {

}



allprojects {
    repositories {
        jcenter()

        maven {
            url 'http://localhost:8081/artifactory/plugins-release'
            credentials {
                username = "admin"
                password = "password"
            }
        }
    }

}
